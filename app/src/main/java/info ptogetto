Allora vorrei proporle un progetto che calca un po lo stile di moneybook:
L'app chiede lo stato d'animo giornaliero all'utente e la relativa intensità,  --FATTO
questi stati vengono salvati in un database  --FATTO
e viene calcolata la percentuale degli stati d'animo settimanali, mensili e annuali,-DA MIGLIORARE

ovviamente le percentuali sono pesate considerando l'intensità inserita quotidianamente.
L'applicazione si occuperà anche di comunicarti una serie di consigli in base all'andamento emotivo della settimana.


import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody
import org.json.JSONObject

class GPT2Client(private val apiKey: String) {

    private val client = OkHttpClient()

    fun generateText(prompt: String): String? {
        val mediaType = "application/json; charset=utf-8".toMediaType()
        val requestBody = JSONObject().apply {
            put("prompt", prompt)
            put("max_tokens", 50) // Numero massimo di token per il testo generato
        }.toString().toRequestBody(mediaType)

        val request = Request.Builder()
            .url("https://api.openai.com/v1/engines/davinci/completions")
            .addHeader("Authorization", "Bearer $apiKey")
            .post(requestBody)
            .build()

        client.newCall(request).execute().use { response ->
            if (!response.isSuccessful) return null
            val jsonResponse = response.body?.string()
            val jsonObject = JSONObject(jsonResponse)
            return jsonObject.getJSONArray("choices").getJSONObject(0).getString("text")
        }
    }
}

fun main() {
    val apiKey = "YOUR_OPENAI_API_KEY"
    val gpt2Client = GPT2Client(apiKey)
    val prompt = "Once upon a time"
    val generatedText = gpt2Client.generateText(prompt)
    println("Generated text: $generatedText")
}
